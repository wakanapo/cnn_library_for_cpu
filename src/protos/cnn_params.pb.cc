// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cnn_params.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cnn_params.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace CnnProto {
class WeightDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Weight>
     _instance;
} _Weight_default_instance_;
class BiasDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Bias>
     _instance;
} _Bias_default_instance_;
class ParamsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Params>
     _instance;
} _Params_default_instance_;

namespace protobuf_cnn_5fparams_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Weight, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Weight, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bias, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bias, b_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Params, weights_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Params, biases_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(Weight)},
  { 6, -1, sizeof(Bias)},
  { 12, -1, sizeof(Params)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Weight_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Bias_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Params_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cnn_params.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Weight_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Weight_default_instance_);_Bias_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Bias_default_instance_);_Params_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Params_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020cnn_params.proto\022\010CnnProto\"\027\n\006Weight\022\r"
      "\n\001w\030\001 \003(\002B\002\020\001\"\025\n\004Bias\022\r\n\001b\030\001 \003(\002B\002\020\001\"K\n\006"
      "Params\022!\n\007weights\030\001 \003(\0132\020.CnnProto.Weigh"
      "t\022\036\n\006biases\030\002 \003(\0132\016.CnnProto.Biasb\006proto"
      "3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 161);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cnn_params.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_cnn_5fparams_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Weight::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Weight::Weight()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cnn_5fparams_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CnnProto.Weight)
}
Weight::Weight(const Weight& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      w_(from.w_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CnnProto.Weight)
}

void Weight::SharedCtor() {
  _cached_size_ = 0;
}

Weight::~Weight() {
  // @@protoc_insertion_point(destructor:CnnProto.Weight)
  SharedDtor();
}

void Weight::SharedDtor() {
}

void Weight::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Weight::descriptor() {
  protobuf_cnn_5fparams_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cnn_5fparams_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Weight& Weight::default_instance() {
  protobuf_cnn_5fparams_2eproto::InitDefaults();
  return *internal_default_instance();
}

Weight* Weight::New(::google::protobuf::Arena* arena) const {
  Weight* n = new Weight;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Weight::Clear() {
// @@protoc_insertion_point(message_clear_start:CnnProto.Weight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  w_.Clear();
  _internal_metadata_.Clear();
}

bool Weight::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CnnProto.Weight)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float w = 1 [packed = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CnnProto.Weight)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CnnProto.Weight)
  return false;
#undef DO_
}

void Weight::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CnnProto.Weight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float w = 1 [packed = true];
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CnnProto.Weight)
}

::google::protobuf::uint8* Weight::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CnnProto.Weight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float w = 1 [packed = true];
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CnnProto.Weight)
  return target;
}

size_t Weight::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CnnProto.Weight)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float w = 1 [packed = true];
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Weight::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CnnProto.Weight)
  GOOGLE_DCHECK_NE(&from, this);
  const Weight* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Weight>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CnnProto.Weight)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CnnProto.Weight)
    MergeFrom(*source);
  }
}

void Weight::MergeFrom(const Weight& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CnnProto.Weight)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  w_.MergeFrom(from.w_);
}

void Weight::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CnnProto.Weight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Weight::CopyFrom(const Weight& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CnnProto.Weight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Weight::IsInitialized() const {
  return true;
}

void Weight::Swap(Weight* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Weight::InternalSwap(Weight* other) {
  using std::swap;
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Weight::GetMetadata() const {
  protobuf_cnn_5fparams_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cnn_5fparams_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Weight

// repeated float w = 1 [packed = true];
int Weight::w_size() const {
  return w_.size();
}
void Weight::clear_w() {
  w_.Clear();
}
float Weight::w(int index) const {
  // @@protoc_insertion_point(field_get:CnnProto.Weight.w)
  return w_.Get(index);
}
void Weight::set_w(int index, float value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:CnnProto.Weight.w)
}
void Weight::add_w(float value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:CnnProto.Weight.w)
}
const ::google::protobuf::RepeatedField< float >&
Weight::w() const {
  // @@protoc_insertion_point(field_list:CnnProto.Weight.w)
  return w_;
}
::google::protobuf::RepeatedField< float >*
Weight::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:CnnProto.Weight.w)
  return &w_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Bias::kBFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Bias::Bias()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cnn_5fparams_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CnnProto.Bias)
}
Bias::Bias(const Bias& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      b_(from.b_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CnnProto.Bias)
}

void Bias::SharedCtor() {
  _cached_size_ = 0;
}

Bias::~Bias() {
  // @@protoc_insertion_point(destructor:CnnProto.Bias)
  SharedDtor();
}

void Bias::SharedDtor() {
}

void Bias::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Bias::descriptor() {
  protobuf_cnn_5fparams_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cnn_5fparams_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Bias& Bias::default_instance() {
  protobuf_cnn_5fparams_2eproto::InitDefaults();
  return *internal_default_instance();
}

Bias* Bias::New(::google::protobuf::Arena* arena) const {
  Bias* n = new Bias;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Bias::Clear() {
// @@protoc_insertion_point(message_clear_start:CnnProto.Bias)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  b_.Clear();
  _internal_metadata_.Clear();
}

bool Bias::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CnnProto.Bias)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float b = 1 [packed = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_b())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10u, input, this->mutable_b())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CnnProto.Bias)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CnnProto.Bias)
  return false;
#undef DO_
}

void Bias::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CnnProto.Bias)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float b = 1 [packed = true];
  if (this->b_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _b_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->b().data(), this->b_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CnnProto.Bias)
}

::google::protobuf::uint8* Bias::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CnnProto.Bias)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float b = 1 [packed = true];
  if (this->b_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _b_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->b_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CnnProto.Bias)
  return target;
}

size_t Bias::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CnnProto.Bias)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float b = 1 [packed = true];
  {
    unsigned int count = static_cast<unsigned int>(this->b_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _b_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Bias::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CnnProto.Bias)
  GOOGLE_DCHECK_NE(&from, this);
  const Bias* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Bias>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CnnProto.Bias)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CnnProto.Bias)
    MergeFrom(*source);
  }
}

void Bias::MergeFrom(const Bias& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CnnProto.Bias)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  b_.MergeFrom(from.b_);
}

void Bias::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CnnProto.Bias)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Bias::CopyFrom(const Bias& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CnnProto.Bias)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Bias::IsInitialized() const {
  return true;
}

void Bias::Swap(Bias* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Bias::InternalSwap(Bias* other) {
  using std::swap;
  b_.InternalSwap(&other->b_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Bias::GetMetadata() const {
  protobuf_cnn_5fparams_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cnn_5fparams_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Bias

// repeated float b = 1 [packed = true];
int Bias::b_size() const {
  return b_.size();
}
void Bias::clear_b() {
  b_.Clear();
}
float Bias::b(int index) const {
  // @@protoc_insertion_point(field_get:CnnProto.Bias.b)
  return b_.Get(index);
}
void Bias::set_b(int index, float value) {
  b_.Set(index, value);
  // @@protoc_insertion_point(field_set:CnnProto.Bias.b)
}
void Bias::add_b(float value) {
  b_.Add(value);
  // @@protoc_insertion_point(field_add:CnnProto.Bias.b)
}
const ::google::protobuf::RepeatedField< float >&
Bias::b() const {
  // @@protoc_insertion_point(field_list:CnnProto.Bias.b)
  return b_;
}
::google::protobuf::RepeatedField< float >*
Bias::mutable_b() {
  // @@protoc_insertion_point(field_mutable_list:CnnProto.Bias.b)
  return &b_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Params::kWeightsFieldNumber;
const int Params::kBiasesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Params::Params()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cnn_5fparams_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CnnProto.Params)
}
Params::Params(const Params& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      weights_(from.weights_),
      biases_(from.biases_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CnnProto.Params)
}

void Params::SharedCtor() {
  _cached_size_ = 0;
}

Params::~Params() {
  // @@protoc_insertion_point(destructor:CnnProto.Params)
  SharedDtor();
}

void Params::SharedDtor() {
}

void Params::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Params::descriptor() {
  protobuf_cnn_5fparams_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cnn_5fparams_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Params& Params::default_instance() {
  protobuf_cnn_5fparams_2eproto::InitDefaults();
  return *internal_default_instance();
}

Params* Params::New(::google::protobuf::Arena* arena) const {
  Params* n = new Params;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Params::Clear() {
// @@protoc_insertion_point(message_clear_start:CnnProto.Params)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  weights_.Clear();
  biases_.Clear();
  _internal_metadata_.Clear();
}

bool Params::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CnnProto.Params)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CnnProto.Weight weights = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_weights()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CnnProto.Bias biases = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_biases()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CnnProto.Params)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CnnProto.Params)
  return false;
#undef DO_
}

void Params::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CnnProto.Params)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CnnProto.Weight weights = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->weights_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->weights(static_cast<int>(i)), output);
  }

  // repeated .CnnProto.Bias biases = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->biases_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->biases(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CnnProto.Params)
}

::google::protobuf::uint8* Params::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CnnProto.Params)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CnnProto.Weight weights = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->weights_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->weights(static_cast<int>(i)), deterministic, target);
  }

  // repeated .CnnProto.Bias biases = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->biases_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->biases(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CnnProto.Params)
  return target;
}

size_t Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CnnProto.Params)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .CnnProto.Weight weights = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->weights_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->weights(static_cast<int>(i)));
    }
  }

  // repeated .CnnProto.Bias biases = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->biases_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->biases(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Params::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CnnProto.Params)
  GOOGLE_DCHECK_NE(&from, this);
  const Params* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Params>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CnnProto.Params)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CnnProto.Params)
    MergeFrom(*source);
  }
}

void Params::MergeFrom(const Params& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CnnProto.Params)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  weights_.MergeFrom(from.weights_);
  biases_.MergeFrom(from.biases_);
}

void Params::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CnnProto.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Params::CopyFrom(const Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CnnProto.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Params::IsInitialized() const {
  return true;
}

void Params::Swap(Params* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Params::InternalSwap(Params* other) {
  using std::swap;
  weights_.InternalSwap(&other->weights_);
  biases_.InternalSwap(&other->biases_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Params::GetMetadata() const {
  protobuf_cnn_5fparams_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cnn_5fparams_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Params

// repeated .CnnProto.Weight weights = 1;
int Params::weights_size() const {
  return weights_.size();
}
void Params::clear_weights() {
  weights_.Clear();
}
const ::CnnProto::Weight& Params::weights(int index) const {
  // @@protoc_insertion_point(field_get:CnnProto.Params.weights)
  return weights_.Get(index);
}
::CnnProto::Weight* Params::mutable_weights(int index) {
  // @@protoc_insertion_point(field_mutable:CnnProto.Params.weights)
  return weights_.Mutable(index);
}
::CnnProto::Weight* Params::add_weights() {
  // @@protoc_insertion_point(field_add:CnnProto.Params.weights)
  return weights_.Add();
}
::google::protobuf::RepeatedPtrField< ::CnnProto::Weight >*
Params::mutable_weights() {
  // @@protoc_insertion_point(field_mutable_list:CnnProto.Params.weights)
  return &weights_;
}
const ::google::protobuf::RepeatedPtrField< ::CnnProto::Weight >&
Params::weights() const {
  // @@protoc_insertion_point(field_list:CnnProto.Params.weights)
  return weights_;
}

// repeated .CnnProto.Bias biases = 2;
int Params::biases_size() const {
  return biases_.size();
}
void Params::clear_biases() {
  biases_.Clear();
}
const ::CnnProto::Bias& Params::biases(int index) const {
  // @@protoc_insertion_point(field_get:CnnProto.Params.biases)
  return biases_.Get(index);
}
::CnnProto::Bias* Params::mutable_biases(int index) {
  // @@protoc_insertion_point(field_mutable:CnnProto.Params.biases)
  return biases_.Mutable(index);
}
::CnnProto::Bias* Params::add_biases() {
  // @@protoc_insertion_point(field_add:CnnProto.Params.biases)
  return biases_.Add();
}
::google::protobuf::RepeatedPtrField< ::CnnProto::Bias >*
Params::mutable_biases() {
  // @@protoc_insertion_point(field_mutable_list:CnnProto.Params.biases)
  return &biases_;
}
const ::google::protobuf::RepeatedPtrField< ::CnnProto::Bias >&
Params::biases() const {
  // @@protoc_insertion_point(field_list:CnnProto.Params.biases)
  return biases_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace CnnProto

// @@protoc_insertion_point(global_scope)
