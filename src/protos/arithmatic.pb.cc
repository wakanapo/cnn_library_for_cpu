// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: arithmatic.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "arithmatic.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Arithmatic {
class CalculationDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Calculation>
     _instance;
} _Calculation_default_instance_;
class OneDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<One>
     _instance;
} _One_default_instance_;

namespace protobuf_arithmatic_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Calculation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Calculation, file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Calculation, line_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Calculation, operator__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Calculation, a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Calculation, b_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Calculation, ans_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(One, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(One, calc_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(Calculation)},
  { 11, -1, sizeof(One)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Calculation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_One_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "arithmatic.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Calculation_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Calculation_default_instance_);_One_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_One_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020arithmatic.proto\022\nArithmatic\"^\n\013Calcul"
      "ation\022\014\n\004file\030\001 \001(\t\022\014\n\004line\030\002 \001(\005\022\020\n\010ope"
      "rator\030\003 \001(\t\022\t\n\001a\030\004 \001(\002\022\t\n\001b\030\005 \001(\002\022\013\n\003ans"
      "\030\006 \001(\002\",\n\003One\022%\n\004calc\030\001 \003(\0132\027.Arithmatic"
      ".Calculationb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 180);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "arithmatic.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_arithmatic_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Calculation::kFileFieldNumber;
const int Calculation::kLineFieldNumber;
const int Calculation::kOperatorFieldNumber;
const int Calculation::kAFieldNumber;
const int Calculation::kBFieldNumber;
const int Calculation::kAnsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Calculation::Calculation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_arithmatic_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Arithmatic.Calculation)
}
Calculation::Calculation(const Calculation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file().size() > 0) {
    file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  operator__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.operator_().size() > 0) {
    operator__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operator__);
  }
  ::memcpy(&line_, &from.line_,
    static_cast<size_t>(reinterpret_cast<char*>(&ans_) -
    reinterpret_cast<char*>(&line_)) + sizeof(ans_));
  // @@protoc_insertion_point(copy_constructor:Arithmatic.Calculation)
}

void Calculation::SharedCtor() {
  file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operator__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&line_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ans_) -
      reinterpret_cast<char*>(&line_)) + sizeof(ans_));
  _cached_size_ = 0;
}

Calculation::~Calculation() {
  // @@protoc_insertion_point(destructor:Arithmatic.Calculation)
  SharedDtor();
}

void Calculation::SharedDtor() {
  file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operator__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Calculation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Calculation::descriptor() {
  protobuf_arithmatic_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_arithmatic_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Calculation& Calculation::default_instance() {
  protobuf_arithmatic_2eproto::InitDefaults();
  return *internal_default_instance();
}

Calculation* Calculation::New(::google::protobuf::Arena* arena) const {
  Calculation* n = new Calculation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Calculation::Clear() {
// @@protoc_insertion_point(message_clear_start:Arithmatic.Calculation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operator__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&line_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ans_) -
      reinterpret_cast<char*>(&line_)) + sizeof(ans_));
  _internal_metadata_.Clear();
}

bool Calculation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Arithmatic.Calculation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string file = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file().data(), static_cast<int>(this->file().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Arithmatic.Calculation.file"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 line = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &line_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string operator = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operator_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->operator_().data(), static_cast<int>(this->operator_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Arithmatic.Calculation.operator"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float a = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &a_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float b = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &b_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float ans = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ans_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Arithmatic.Calculation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Arithmatic.Calculation)
  return false;
#undef DO_
}

void Calculation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Arithmatic.Calculation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file = 1;
  if (this->file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file().data(), static_cast<int>(this->file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Arithmatic.Calculation.file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->file(), output);
  }

  // int32 line = 2;
  if (this->line() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->line(), output);
  }

  // string operator = 3;
  if (this->operator_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operator_().data(), static_cast<int>(this->operator_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Arithmatic.Calculation.operator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->operator_(), output);
  }

  // float a = 4;
  if (this->a() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->a(), output);
  }

  // float b = 5;
  if (this->b() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->b(), output);
  }

  // float ans = 6;
  if (this->ans() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->ans(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Arithmatic.Calculation)
}

::google::protobuf::uint8* Calculation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Arithmatic.Calculation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file = 1;
  if (this->file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file().data(), static_cast<int>(this->file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Arithmatic.Calculation.file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->file(), target);
  }

  // int32 line = 2;
  if (this->line() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->line(), target);
  }

  // string operator = 3;
  if (this->operator_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operator_().data(), static_cast<int>(this->operator_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Arithmatic.Calculation.operator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->operator_(), target);
  }

  // float a = 4;
  if (this->a() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->a(), target);
  }

  // float b = 5;
  if (this->b() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->b(), target);
  }

  // float ans = 6;
  if (this->ans() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->ans(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arithmatic.Calculation)
  return target;
}

size_t Calculation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arithmatic.Calculation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string file = 1;
  if (this->file().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file());
  }

  // string operator = 3;
  if (this->operator_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->operator_());
  }

  // int32 line = 2;
  if (this->line() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->line());
  }

  // float a = 4;
  if (this->a() != 0) {
    total_size += 1 + 4;
  }

  // float b = 5;
  if (this->b() != 0) {
    total_size += 1 + 4;
  }

  // float ans = 6;
  if (this->ans() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Calculation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arithmatic.Calculation)
  GOOGLE_DCHECK_NE(&from, this);
  const Calculation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Calculation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arithmatic.Calculation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arithmatic.Calculation)
    MergeFrom(*source);
  }
}

void Calculation::MergeFrom(const Calculation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arithmatic.Calculation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.file().size() > 0) {

    file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  if (from.operator_().size() > 0) {

    operator__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operator__);
  }
  if (from.line() != 0) {
    set_line(from.line());
  }
  if (from.a() != 0) {
    set_a(from.a());
  }
  if (from.b() != 0) {
    set_b(from.b());
  }
  if (from.ans() != 0) {
    set_ans(from.ans());
  }
}

void Calculation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arithmatic.Calculation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Calculation::CopyFrom(const Calculation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arithmatic.Calculation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Calculation::IsInitialized() const {
  return true;
}

void Calculation::Swap(Calculation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Calculation::InternalSwap(Calculation* other) {
  using std::swap;
  file_.Swap(&other->file_);
  operator__.Swap(&other->operator__);
  swap(line_, other->line_);
  swap(a_, other->a_);
  swap(b_, other->b_);
  swap(ans_, other->ans_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Calculation::GetMetadata() const {
  protobuf_arithmatic_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_arithmatic_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Calculation

// string file = 1;
void Calculation::clear_file() {
  file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Calculation::file() const {
  // @@protoc_insertion_point(field_get:Arithmatic.Calculation.file)
  return file_.GetNoArena();
}
void Calculation::set_file(const ::std::string& value) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Arithmatic.Calculation.file)
}
#if LANG_CXX11
void Calculation::set_file(::std::string&& value) {
  
  file_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Arithmatic.Calculation.file)
}
#endif
void Calculation::set_file(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Arithmatic.Calculation.file)
}
void Calculation::set_file(const char* value, size_t size) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Arithmatic.Calculation.file)
}
::std::string* Calculation::mutable_file() {
  
  // @@protoc_insertion_point(field_mutable:Arithmatic.Calculation.file)
  return file_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Calculation::release_file() {
  // @@protoc_insertion_point(field_release:Arithmatic.Calculation.file)
  
  return file_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Calculation::set_allocated_file(::std::string* file) {
  if (file != NULL) {
    
  } else {
    
  }
  file_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file);
  // @@protoc_insertion_point(field_set_allocated:Arithmatic.Calculation.file)
}

// int32 line = 2;
void Calculation::clear_line() {
  line_ = 0;
}
::google::protobuf::int32 Calculation::line() const {
  // @@protoc_insertion_point(field_get:Arithmatic.Calculation.line)
  return line_;
}
void Calculation::set_line(::google::protobuf::int32 value) {
  
  line_ = value;
  // @@protoc_insertion_point(field_set:Arithmatic.Calculation.line)
}

// string operator = 3;
void Calculation::clear_operator_() {
  operator__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Calculation::operator_() const {
  // @@protoc_insertion_point(field_get:Arithmatic.Calculation.operator)
  return operator__.GetNoArena();
}
void Calculation::set_operator_(const ::std::string& value) {
  
  operator__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Arithmatic.Calculation.operator)
}
#if LANG_CXX11
void Calculation::set_operator_(::std::string&& value) {
  
  operator__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Arithmatic.Calculation.operator)
}
#endif
void Calculation::set_operator_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  operator__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Arithmatic.Calculation.operator)
}
void Calculation::set_operator_(const char* value, size_t size) {
  
  operator__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Arithmatic.Calculation.operator)
}
::std::string* Calculation::mutable_operator_() {
  
  // @@protoc_insertion_point(field_mutable:Arithmatic.Calculation.operator)
  return operator__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Calculation::release_operator_() {
  // @@protoc_insertion_point(field_release:Arithmatic.Calculation.operator)
  
  return operator__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Calculation::set_allocated_operator_(::std::string* operator_) {
  if (operator_ != NULL) {
    
  } else {
    
  }
  operator__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), operator_);
  // @@protoc_insertion_point(field_set_allocated:Arithmatic.Calculation.operator)
}

// float a = 4;
void Calculation::clear_a() {
  a_ = 0;
}
float Calculation::a() const {
  // @@protoc_insertion_point(field_get:Arithmatic.Calculation.a)
  return a_;
}
void Calculation::set_a(float value) {
  
  a_ = value;
  // @@protoc_insertion_point(field_set:Arithmatic.Calculation.a)
}

// float b = 5;
void Calculation::clear_b() {
  b_ = 0;
}
float Calculation::b() const {
  // @@protoc_insertion_point(field_get:Arithmatic.Calculation.b)
  return b_;
}
void Calculation::set_b(float value) {
  
  b_ = value;
  // @@protoc_insertion_point(field_set:Arithmatic.Calculation.b)
}

// float ans = 6;
void Calculation::clear_ans() {
  ans_ = 0;
}
float Calculation::ans() const {
  // @@protoc_insertion_point(field_get:Arithmatic.Calculation.ans)
  return ans_;
}
void Calculation::set_ans(float value) {
  
  ans_ = value;
  // @@protoc_insertion_point(field_set:Arithmatic.Calculation.ans)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int One::kCalcFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

One::One()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_arithmatic_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Arithmatic.One)
}
One::One(const One& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      calc_(from.calc_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Arithmatic.One)
}

void One::SharedCtor() {
  _cached_size_ = 0;
}

One::~One() {
  // @@protoc_insertion_point(destructor:Arithmatic.One)
  SharedDtor();
}

void One::SharedDtor() {
}

void One::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* One::descriptor() {
  protobuf_arithmatic_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_arithmatic_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const One& One::default_instance() {
  protobuf_arithmatic_2eproto::InitDefaults();
  return *internal_default_instance();
}

One* One::New(::google::protobuf::Arena* arena) const {
  One* n = new One;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void One::Clear() {
// @@protoc_insertion_point(message_clear_start:Arithmatic.One)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  calc_.Clear();
  _internal_metadata_.Clear();
}

bool One::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Arithmatic.One)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Arithmatic.Calculation calc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_calc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Arithmatic.One)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Arithmatic.One)
  return false;
#undef DO_
}

void One::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Arithmatic.One)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Arithmatic.Calculation calc = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->calc_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->calc(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Arithmatic.One)
}

::google::protobuf::uint8* One::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Arithmatic.One)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Arithmatic.Calculation calc = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->calc_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->calc(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arithmatic.One)
  return target;
}

size_t One::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arithmatic.One)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Arithmatic.Calculation calc = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->calc_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->calc(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void One::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arithmatic.One)
  GOOGLE_DCHECK_NE(&from, this);
  const One* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const One>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arithmatic.One)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arithmatic.One)
    MergeFrom(*source);
  }
}

void One::MergeFrom(const One& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arithmatic.One)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  calc_.MergeFrom(from.calc_);
}

void One::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arithmatic.One)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void One::CopyFrom(const One& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arithmatic.One)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool One::IsInitialized() const {
  return true;
}

void One::Swap(One* other) {
  if (other == this) return;
  InternalSwap(other);
}
void One::InternalSwap(One* other) {
  using std::swap;
  calc_.InternalSwap(&other->calc_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata One::GetMetadata() const {
  protobuf_arithmatic_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_arithmatic_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// One

// repeated .Arithmatic.Calculation calc = 1;
int One::calc_size() const {
  return calc_.size();
}
void One::clear_calc() {
  calc_.Clear();
}
const ::Arithmatic::Calculation& One::calc(int index) const {
  // @@protoc_insertion_point(field_get:Arithmatic.One.calc)
  return calc_.Get(index);
}
::Arithmatic::Calculation* One::mutable_calc(int index) {
  // @@protoc_insertion_point(field_mutable:Arithmatic.One.calc)
  return calc_.Mutable(index);
}
::Arithmatic::Calculation* One::add_calc() {
  // @@protoc_insertion_point(field_add:Arithmatic.One.calc)
  return calc_.Add();
}
::google::protobuf::RepeatedPtrField< ::Arithmatic::Calculation >*
One::mutable_calc() {
  // @@protoc_insertion_point(field_mutable_list:Arithmatic.One.calc)
  return &calc_;
}
const ::google::protobuf::RepeatedPtrField< ::Arithmatic::Calculation >&
One::calc() const {
  // @@protoc_insertion_point(field_list:Arithmatic.One.calc)
  return calc_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Arithmatic

// @@protoc_insertion_point(global_scope)
